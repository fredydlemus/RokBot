AWSTemplateFormatVersion: 2010-09-09
Description: Clouformation template to create SageMaker notebook with IAM policy
  and lifecycle configuration

Parameters:
  InstanceType:
    Type: String
    AllowedValues:
      - ml.t3.medium
    Description: The instance type used for the SageMaker notebook
    Default: ml.t3.medium

Resources:
  #This policy does not follow the principle of least privilege and should NEVER be used in production
  SageMakerNotebookPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - aoss:APIAccessAll
              - aoss:BatchGetCollection
              - aoss:CreateAccessPolicy
              - aoss:CreateCollection
              - aoss:CreateDataSource
              - aoss:CreateIndex
              - aoss:CreateSecurityPolicy
              - aoss:DeleteCollection
              - aoss:DeleteAccessPolicy
              - aoss:DeleteSecurityPolicy
              - aoss:DescribeIndex
              - aoss:ListCollections
              - aoss:ReadDocument
              - aoss:UpdateCollection
              - aoss:WriteDocument
              - bedrock:ApplyGuardrail
              - bedrock:AssociateAgentKnowledgeBase
              - bedrock:CreateAgent
              - bedrock:CreateAgentActionGroup
              - bedrock:CreateAgentAlias
              - bedrock:CreateDataSource
              - bedrock:CreateGuardrail
              - bedrock:CreateGuardrailVersion
              - bedrock:CreateKnowledgeBase
              - bedrock:DeleteAgent
              - bedrock:DeleteAgentActionGroup
              - bedrock:DeleteAgentAlias
              - bedrock:DeleteAgentVersion
              - bedrock:DeleteDataSource
              - bedrock:DeleteGuardrail
              - bedrock:DeleteKnowledgeBase
              - bedrock:DisassociateAgentKnowledgeBase
              - bedrock:GetAgent
              - bedrock:GetAgentActionGroup
              - bedrock:GetAgentAlias
              - bedrock:GetAgentVersion
              - bedrock:GetFoundationModel
              - bedrock:GetGuardrail
              - bedrock:GetKnowledgeBase
              - bedrock:InvokeAgent
              - bedrock:InvokeModel
              - bedrock:ListAgentActionGroups
              - bedrock:ListAgentAliases
              - bedrock:ListAgentVersions
              - bedrock:ListAgents
              - bedrock:ListFoundationModels
              - bedrock:ListGuardrails
              - bedrock:ListKnowledgeBases
              - bedrock:ListTagsForResource
              - bedrock:PrepareAgent
              - bedrock:Retrieve
              - bedrock:StartIngestionJob
              - bedrock:TagResource
              - bedrock:UntagResource
              - bedrock:UpdateAgent
              - bedrock:UpdateAgentActionGroup
              - bedrock:UpdateAgentAlias
              - bedrock:UpdateGuardrail
              - iam:GetPolicy
              - iam:GetRole
              - iam:ListPolicies
              - lambda:ListFunctions
              - s3:ListAllMyBuckets
            Resource: '*'
          - Effect: Allow
            Action:
              - s3:CreateBucket
              - s3:DeleteBucket
              - s3:DeleteObject
              - s3:GetObject
              - s3:ListBucket
              - s3:PutObject
            Resource: arn:aws:s3:::*-agent-kb*
          - Effect: Allow
            Action:
              - lambda:AddPermission
              - lambda:CreateFunction
              - lambda:DeleteFunction
            Resource: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:*LambdaAgents*
          - Effect: Allow
            Action:
              - iam:PassRole
            Resource:
              - !Sub arn:aws:iam::${AWS::AccountId}:role/AmazonBedrockExecutionRoleForAgents*
              - !Sub arn:aws:iam::${AWS::AccountId}:role/AmazonBedrockLambdaExecutionRoleForAgents*
          - Effect: Allow
            Action:
              - iam:CreateServiceLinkedRole
            Resource:
              - arn:aws:iam::*:role/aws-service-role/observability.aoss.amazonaws.com/AWSServiceRoleForAmazonOpenSearchServerless*
            Condition:
              StringLike:
                iam:AWSServiceName: observability.aoss.amazonaws.com
          - Effect: Allow
            Action:
              - iam:AttachRolePolicy
              - iam:PutRolePolicy
            Resource:
              - arn:aws:iam::*:role/aws-service-role/observability.aoss.amazonaws.com/AWSServiceRoleForAmazonOpenSearchServerless*
  AmazonBedrockExecutionRoleForAgentsAIAssitant03:
    Type: AWS::IAM::Role
    Properties:
      RoleName: AmazonBedrockExecutionRoleForAgentsAIAssistant03
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: bedrock.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
        - arn:aws:iam::aws:policy/service-role/AmazonS3ObjectLambdaExecutionRolePolicy
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !Ref SageMakerNotebookPolicy